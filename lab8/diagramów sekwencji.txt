Diagramów sekwencji - Diagram sekwencji (ang. sequence diagram) s³u¿y do prezentowania interakcji pomiêdzy obiektami wraz z uwzglêdnieniem w czasie komunikatów, jakie s¹ przesy³ane pomiêdzy nimi. Na diagramie sekwencji obiekty u³o¿one s¹ wzd³u¿ osi X, a komunikaty przesy³ane s¹ wzd³u¿ osi Y. Zasadniczym zastosowaniem diagramów sekwencji jest modelowanie zachowania systemu w kontekœcie scenariuszy przypadków u¿ycia. Diagramy sekwencji pozwalaj¹ uzyskaæ odpowiedŸ na pytanie, jak w czasie przebiega komunikacja pomiêdzy obiektami. Dodatkowo diagramy sekwencji stanowi¹ podstawow¹ technikê modelowania zachowania systemu, które sk³ada siê na realizacjê przypadku u¿ycia.
Komunikat (ang. message) jest to informacja przesy³ana pomiêdzy obiektami. W jêzyku UML mo¿na korzystaæ z ró¿nych typów komunikatów. Komunikat synchroniczny oznacza, ¿e obiekt musi czekaæ na odpowiedŸ. Komunikat asynchroniczny nie wymaga oczekiwania na odpowiedŸ.
Fragment (ang. combined fragment) to konceptualnie zamkniêta czêœæ diagramu sekwencji, która rozszerza mo¿liwoœci obejmowanego przez siebie obszaru diagramu sekwencji. Fragment mo¿e zawieraæ w sobie pêtle, powtórzenia, scenariusze alternatywne lub wskazywaæ poziom abstrakcji modelowanego fragmentu systemu.
Rodzaj fragmentu jest okreœlany poprzez umieszczenie odpowiedniego s³owa kluczowego w lewym górnym rogu. Poni¿ej opis wszystkich s³ów kluczowych, które mog¹ wyst¹piæ we fragmentach.
alt – dzieli fragment interakcji zgodnie z warunkami logiki Boole’a na dwa alternatywne scenariusze; ka¿da  z alternatyw musi byæ opatrzona warunkiem dozoru, którego spe³nienie gwarantuje wykonanie danej alternatywy.
assert – prezentuje fragment interakcji, który musi byæ wykonany zgodnie z za³o¿onymi warunkami i komunikatami.
break – wskazuje fragment diagramu sekwencji, który realizowany jest po spe³nieniu warunku dozoru; spe³nienie warunku dozoru skutkuje wykonaniem sekwencji komunikatów zawartych we fragmencie, a nastêpnie wyjœcie ze scenariusza; w przypadku, gdy warunek dozoru nie jest spe³niony, komunikaty zawarte we fragmencie s¹ pomijane.
consider – wskazuje fragment z list¹ nazw komunikatów, które s¹ wyselekcjonowane w tej czêœci interakcji; oznacza to, ¿e mimo innych komunikatów, które znajduj¹ siê w danej czêœci interakcji, pokazane zostan¹ tylko te, które s¹ wypisane w za s³owem kluczowym consider.
critical – wskazuje, ¿e dany fragment diagramu sekwencji nie mo¿e byæ przerwany przez inny proces.
ignore – wskazuje, ¿e w tym fragmencie interakcji znajduj¹siê wiadomoœci, które zosta³y pominiête, gdy¿ ich widocznoœæ nie zmienia zachowania systemu; zignorowane wiadomoœci s¹ wylistowane po s³owie ignore.
loop – powtórzenie fragmentu interakcji okreœlon¹ warunkiem liczbê razy.
neg – fragment prezentuj¹cy jedn¹ lub wiêcej wiadomoœci, które s¹ prawdopodobnie nieprawid³owe.
opt – wskazuje opcjonalny fragment interakcji, który jest wykonywany po spe³nieniu warunku dozoru.
par – prezentuje równoleg³e wykonywanie przep³ywu wiadomoœci.
seq – wskazuje s³abo uszczegó³owiony fragment sekwencji, tzn. taki, który jest ogólny.
strict – prezentuje szczegó³ow¹, ca³kowit¹ komunikacjê pomiêdzy obiektami.
Mo¿liwoœæ stosowania fragmentów w diagramach sekwencji pomaga przy modelowaniu scenariuszy.